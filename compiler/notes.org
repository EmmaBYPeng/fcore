
LetRec:

#+BEGIN_EXAMPLE
doubleLambda1 (evenF : oddF : _) =
  [(F.Lam (F.JClass "java.lang.Integer") (\b ->
  (F.If (F.PrimOp (F.Var b) (E.Compare J.Equal) (F.Lit (E.Integer 0))) (F.Lit (E.Integer 1)) (F.App (F.Var oddF) (F.PrimOp (F.Var b) (E.Arith J.Sub) (F.Lit (E.Integer 1))))))),
  (F.Lam (F.JClass "java.lang.Integer") (\b ->
  (F.If (F.PrimOp (F.Var b) (E.Compare J.Equal) (F.Lit (E.Integer 0))) (F.Lit (E.Integer 0)) (F.App (F.Var evenF) (F.PrimOp (F.Var b) (E.Arith J.Sub) (F.Lit (E.Integer 1)))))))]

doubleLambda2 (evenF : oddF : _) = F.App (F.Var oddF) (F.Lit (E.Integer 7))

evenodd = F.LetRec [((F.JClass "java.lang.Integer"),
                     (F.JClass "java.lang.Integer")),
                    ((F.JClass "java.lang.Integer"),
                     (F.JClass "java.lang.Integer"))]
                   (doubleLambda1)
                   (doubleLambda2)
#+END_EXAMPLE
