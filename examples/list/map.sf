let rec
  map A B (f:A->B) (xs:List<A>) :List<B> =
    if(isNil(xs))
    then new List<B>[]
    else (Cons(B, (f Head(A, xs)), (map A B f (Tail(A, xs)))))
and
  f (x:Int) :Int = x + 1
in
  Head(Int, (map Int Int f (new List<Int>[-1,0,1,2,3])))
