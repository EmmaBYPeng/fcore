let rec
  map [A, B] (f:A->B) (xs:List<A>):List<B> =
    if(isNil(xs))
    then new List<B>()
    else cons(f (head(xs)), map [A, B] f (new List<A>()))
in let
  f(x:Int):Int = x+1
in
  head(map [Int, Int] f (new List<Int>(2,3)))
