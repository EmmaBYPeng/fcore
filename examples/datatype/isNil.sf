data PolyList A = Nil
                | Cons A (PolyList A);
let isNil A (xs: PolyList A): Bool =
    case xs of
       Nil -> True
     | Cons y ys -> False;
type IntList = PolyList Int;
let headIs0 (xs : IntList) : Bool =
   case xs of
       Nil -> if isNil Int xs
              then False
              else True -- unreachable
     | Cons y ys -> if isNil Int xs
                    then True -- unreachable
                    else y == 0;
headIs0
